
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author huseyinkaradana
 */
public class tabloGostermeEkrani extends javax.swing.JInternalFrame {

    ArrayList row;
    String path;
    String data[];

    //hesapla metodu için
    double gano = 0.0;
    double toplamCarpi = 0.0;
    int toplamAKTS = 0;

    PdfPTable pTable;

    public tabloGostermeEkrani() {
        initComponents();
        try {
            ekleme();
            hesapla();
        } catch (IOException ex) {
            Logger.getLogger(tabloGostermeEkrani.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void ekleme() throws FileNotFoundException, IOException {
        path = "C:\\Users\\huseyinkaradana\\Documents\\NetBeansProjects\\GANO APP\\dersler.txt";
        File file = new File(path);
        BufferedReader br = new BufferedReader(new FileReader(file));
        String satir = br.readLine();

        //arrayList e eleman ekleme
        row = new ArrayList();
        DefaultTableModel model = (DefaultTableModel) table_dersler.getModel();

        while (satir != null) {
            row.add(satir);
            satir = br.readLine();
        }

        for (int i = 0; i < row.size(); i++) {
            String line = row.get(i).toString();
            String dataLine[] = line.split(",");
            data = dataLine;
            model.addRow(data);

        }
    }

    /*
    AA = 4.0
    BA = 3.5
    BB = 3.0
    CB = 2.5
    CC = 2.0
    DC = 1.5
    DD = 1.0
    FD = 0.5
    FF = 0.0
     */
    public void hesapla() {
        for (int i = 0; i < table_dersler.getRowCount(); i++) {
            int akts = Integer.valueOf(table_dersler.getValueAt(i, 3).toString());
            String harf = table_dersler.getValueAt(i, 5).toString();
            if (harf.equals("AA = 4.0")) {
                toplamCarpi = toplamCarpi + akts * 4.0;
            } else if (harf.equals("BA = 3.5")) {
                toplamCarpi = toplamCarpi + akts * 3.5;
            } else if (harf.equals("BB = 3.0")) {
                toplamCarpi = toplamCarpi + akts * 3.0;
            } else if (harf.equals("CB = 2.5")) {
                toplamCarpi = toplamCarpi + akts * 2.5;
            } else if (harf.equals("CC = 2.0")) {
                toplamCarpi = toplamCarpi + akts * 2.0;
            } else if (harf.equals("DC = 1.5")) {
                toplamCarpi = toplamCarpi + akts * 1.5;
            } else if (harf.equals("DD = 1.0")) {
                toplamCarpi = toplamCarpi + akts * 1.0;
            } else if (harf.equals("FD = 0.5")) {
                toplamCarpi = toplamCarpi + akts * 0.5;
            } else if (harf.equals("FF = 0.0")) {
                toplamCarpi = toplamCarpi + akts * 0.0;
            }
            toplamAKTS += akts;
        }

        gano = toplamCarpi / toplamAKTS;
        String g = String.valueOf(gano);
        lbl_notOrt.setText(g);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_dersler = new javax.swing.JTable();
        btn_sil = new javax.swing.JButton();
        lbl_notOrt = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Tablo Göster");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Ders Liste Tablosu :");

        table_dersler.setBorder(null);
        table_dersler.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Donem", "Ders Kodu", "Ders Adı", "AKTS", "Ortalama", "Harf Notu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_dersler);

        btn_sil.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_sil.setText("Sil");
        btn_sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_silActionPerformed(evt);
            }
        });

        lbl_notOrt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_notOrt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_notOrt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText(" Genel Not Ortalaması ");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pdf.png"))); // NOI18N
        jButton2.setPreferredSize(new java.awt.Dimension(60, 60));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/print.jpg"))); // NOI18N
        jButton3.setPreferredSize(new java.awt.Dimension(60, 60));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_notOrt, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(373, 373, 373)
                            .addComponent(btn_sil, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(btn_sil, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_notOrt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_silActionPerformed
        int secilenSatir;
        if (btn_sil.getText().equals("Sil")) {
            DefaultTableModel model = (DefaultTableModel) table_dersler.getModel();
            secilenSatir = table_dersler.getSelectedRow();
            model.removeRow(secilenSatir);
            btn_sil.setText("Kaydet");
        } else if (btn_sil.getText().equals("Kaydet")) {
            btn_sil.setText("Sil");

            File file = new File(path);
            try {
                FileWriter fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);
                for (int i = 0; i < table_dersler.getRowCount(); i++) {
                    for (int j = 0; j < table_dersler.getColumnCount(); j++) {
                        bw.write(table_dersler.getValueAt(i, j).toString() + ",");
                    }
                    bw.newLine();
                }
                bw.close();
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(tabloGostermeEkrani.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        hesapla();
    }//GEN-LAST:event_btn_silActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        try {
            MessageFormat format = new MessageFormat("GANO : " + gano);
            MessageFormat format1 = new MessageFormat("Sayfa{0,number,integer}");
            table_dersler.print(JTable.PrintMode.NORMAL, format, format1);
        } catch (PrinterException ex) {
            Logger.getLogger(tabloGostermeEkrani.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        PDFDokuman("C:\\Users\\huseyinkaradana\\Documents\\NetBeansProjects\\GANO APP\\");


    }//GEN-LAST:event_jButton2ActionPerformed

    public void PDFDokuman(String path) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Kaydetme Ekranı");
        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File filetoSave = fileChooser.getSelectedFile();

            //pdf oluşturma
            Document doc = new Document();
            try {

                PdfWriter.getInstance(doc, new FileOutputStream(filetoSave + "dersler.pdf"));
                doc.open();
                Paragraph paragraf = new Paragraph("Transkript");
                Paragraph bos = new Paragraph(" ");

                pTable = new PdfPTable(6);
                pTable.setWidthPercentage(105);
                pTable.setSpacingBefore(11f);
                pTable.setSpacingAfter(11f);
                float[] colWidth = {2f, 2f, 2f, 2f, 2f, 2f};
                pTable.setWidths(colWidth);

                PdfPCell donem = new PdfPCell(new Paragraph("Donem"));
                PdfPCell kod = new PdfPCell(new Paragraph("Ders Kodu"));
                PdfPCell ad = new PdfPCell(new Paragraph("Ders Adı"));
                PdfPCell ak = new PdfPCell(new Paragraph("AKTS"));
                PdfPCell ort = new PdfPCell(new Paragraph("Ortalama"));
                PdfPCell harf = new PdfPCell(new Paragraph("Harf Notu"));

                pTable.addCell(donem);
                pTable.addCell(kod);
                pTable.addCell(ad);
                pTable.addCell(ak);
                pTable.addCell(ort);
                pTable.addCell(harf);

                for (int i = 0; i < table_dersler.getRowCount(); i++) {
                    String donemi = table_dersler.getValueAt(i, 0).toString();
                    String kodi = table_dersler.getValueAt(i, 1).toString();
                    String adi = table_dersler.getValueAt(i, 2).toString();
                    String aki = table_dersler.getValueAt(i, 3).toString();
                    String orti = table_dersler.getValueAt(i, 4).toString();
                    String harfi = table_dersler.getValueAt(i, 5).toString();

                    pTable.addCell(donemi);
                    pTable.addCell(kodi);
                    pTable.addCell(adi);
                    pTable.addCell(aki);
                    pTable.addCell(orti);
                    pTable.addCell(harfi);
                }
                doc.add(paragraf);
                doc.add(new Paragraph("-----------------------------------"));
                doc.add(bos);
                doc.add(pTable);
                doc.add(bos);
                doc.add(new Paragraph("Genel Agirlikli Not Ortalamasi:" + gano));

                JOptionPane.showMessageDialog(null, "PDF Başarıyla Oluşturuldu...");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(tabloGostermeEkrani.class.getName()).log(Level.SEVERE, null, ex);
            } catch (DocumentException ex) {
                Logger.getLogger(tabloGostermeEkrani.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                doc.close();

            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_sil;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_notOrt;
    private javax.swing.JTable table_dersler;
    // End of variables declaration//GEN-END:variables
}
